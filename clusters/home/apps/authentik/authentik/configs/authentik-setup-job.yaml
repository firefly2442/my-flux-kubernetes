apiVersion: batch/v1
kind: Job
metadata:
  name: authentik-setup-job
  namespace: authentik
spec:
  backoffLimit: 1
  ttlSecondsAfterFinished: 600  # Cleans up 10 minutes after completion
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: create-client
          image: alpine:latest
          env:
            - name: AUTHENTIK_API_URL
              value: "https://authentik.homelab.rivetcode.com/api/v3"
            - name: AUTHENTIK_URL
              value: "https://authentik.homelab.rivetcode.com"
            - name: AUTHENTIK_BOOTSTRAP_TOKEN
              valueFrom:
                secretKeyRef:
                  name: authentik-akadmin-credentials
                  key: AUTHENTIK_BOOTSTRAP_TOKEN
          command:
            - /bin/sh
            - -c
            - |
              echo "Installing curl and jq..."
              apk add --no-cache -f curl jq

              echo "Waiting for Authentik API to be ready..."
              until curl -sf "${AUTHENTIK_URL}/-/health/ready/"; do
                echo "Authentik not ready, retrying in 5 seconds..."
                sleep 5
              done

              echo "Authentik API is ready, proceeding..."

              echo "Available flows:"
              curl -s -X GET "${AUTHENTIK_API_URL}/flows/" \
                -H "Authorization: Bearer ${AUTHENTIK_BOOTSTRAP_TOKEN}" \
                -H "Accept: application/json" | jq

              echo "Creating Provider in Authentik..."

              PROVIDER_ID=$(curl -s -X POST "${AUTHENTIK_API_URL}/providers/proxy/" \
                -H "Authorization: Bearer ${AUTHENTIK_BOOTSTRAP_TOKEN}" \
                -H "Content-Type: application/json" \
                -d '{
                  "name": "podinfo-forwardauth",
                  "authorization_flow": "default-provider-authorization-implicit-consent",
                  "external_host": "https://podinfo.homelab.rivetcode.com",
                  "mode": "forward_single",
                  "cookie_domain": "homelab.rivetcode.com",
                  "skip_path_regex": "",
                  "preserve_path": true
                }' | jq -r '.pk')

              if [ -z "$PROVIDER_ID" ] || [ "$PROVIDER_ID" = "null" ]; then
                echo "Failed to create ForwardAuth provider"
                exit 1
              fi

              echo "Creating new outpost..."

              OUTPOST_ID=$(curl -s -X POST "${AUTHENTIK_API_URL}/outposts/" \
                -H "Authorization: Bearer ${AUTHENTIK_BOOTSTRAP_TOKEN}" \
                -H "Content-Type: application/json" \
                -d '{
                  "name": "authentik-outpost",
                  "type": "proxy"
                }' | jq -r '.pk')

              if [ -z "$OUTPOST_ID" ] || [ "$OUTPOST_ID" = "null" ]; then
                echo "Failed to create Outpost"
                exit 1
              fi

              echo "Creating Application..."

              APP_ID=$(curl -s -X POST "${AUTHENTIK_API_URL}/core/applications/" \
                -H "Authorization: Bearer ${AUTHENTIK_BOOTSTRAP_TOKEN}" \
                -H "Content-Type: application/json" \
                -d "{
                  \"name\": \"podinfo\",
                  \"slug\": \"podinfo\",
                  \"provider\": \"/api/v3/providers/proxy/${PROVIDER_ID}/\",
                  \"authorization_flow\": \"default-application-authorization-flow\",
                  \"meta_launch_url\": \"https://podinfo.homelab.rivetcode.com\",
                  \"outpost\": \"/api/v3/outposts/${OUTPOST_ID}/\"
                }" | jq -r '.pk')

              if [ -z "$APP_ID" ] || [ "$APP_ID" = "null" ]; then
                echo "Failed to create Application"
                exit 1
              fi
